{"ast":null,"code":"var _jsxFileName = \"/home/rafa/Documentos/Programming/My Projects/Front-End/trivia-game/src/components/Timer.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { setTime, saveInterval, updateStatus } from '../actions';\nimport { BsStopwatch } from 'react-icons/bs';\n\nclass Timer extends React.Component {\n  componentDidMount() {\n    const {\n      setTimeProp,\n      saveIntervalProp\n    } = this.props;\n    const intervalTime = 1000;\n    const interval = setInterval(() => setTimeProp(1), intervalTime);\n    saveIntervalProp(interval);\n  }\n\n  resetTimer() {\n    const {\n      interval,\n      saveIntervalProp,\n      updateStatusProp\n    } = this.props;\n    updateStatusProp();\n    clearInterval(interval);\n    saveIntervalProp(null);\n  }\n\n  render() {\n    const {\n      time\n    } = this.props;\n    if (time === 0) this.resetTimer();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(BsStopwatch, {\n      color: \"#000\",\n      size: \"3rem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }), time === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 23\n      }\n    }, \"Finished\") : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 41\n      }\n    }, time));\n  }\n\n}\n\nTimer.propTypes = {\n  time: PropTypes.number,\n  interval: PropTypes.number,\n  setTimeProp: PropTypes.func,\n  saveIntervalProp: PropTypes.func\n}.isRequired;\n\nconst mapStateToProps = state => ({\n  time: state.timer.time,\n  interval: state.timer.interval\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setTimeProp: value => dispatch(setTime(value)),\n  saveIntervalProp: value => dispatch(saveInterval(value)),\n  updateStatusProp: () => dispatch(updateStatus())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);","map":{"version":3,"sources":["/home/rafa/Documentos/Programming/My Projects/Front-End/trivia-game/src/components/Timer.js"],"names":["React","connect","PropTypes","setTime","saveInterval","updateStatus","BsStopwatch","Timer","Component","componentDidMount","setTimeProp","saveIntervalProp","props","intervalTime","interval","setInterval","resetTimer","updateStatusProp","clearInterval","render","time","propTypes","number","func","isRequired","mapStateToProps","state","timer","mapDispatchToProps","dispatch","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,EAAkBC,YAAlB,EAAgCC,YAAhC,QAAoD,YAApD;AACA,SAASC,WAAT,QAA4B,gBAA5B;;AAEA,MAAMC,KAAN,SAAoBP,KAAK,CAACQ,SAA1B,CAAoC;AAClCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAoC,KAAKC,KAA/C;AACA,UAAMC,YAAY,GAAG,IAArB;AACA,UAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAML,WAAW,CAAC,CAAD,CAAlB,EAAuBG,YAAvB,CAA5B;AACAF,IAAAA,gBAAgB,CAACG,QAAD,CAAhB;AACD;;AAEDE,EAAAA,UAAU,GAAG;AACX,UAAM;AAAEF,MAAAA,QAAF;AAAYH,MAAAA,gBAAZ;AAA8BM,MAAAA;AAA9B,QAAmD,KAAKL,KAA9D;AACAK,IAAAA,gBAAgB;AAChBC,IAAAA,aAAa,CAACJ,QAAD,CAAb;AACAH,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAW,KAAKR,KAAtB;AAEA,QAAIQ,IAAI,KAAK,CAAb,EAAgB,KAAKJ,UAAL;AAEhB,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAC,MAAnB;AAA0B,MAAA,IAAI,EAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEGI,IAAI,KAAK,CAAT,gBAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAb,gBAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,IAAJ,CAFlC,CADF;AAMD;;AA1BiC;;AA6BpCb,KAAK,CAACc,SAAN,GAAkB;AAChBD,EAAAA,IAAI,EAAElB,SAAS,CAACoB,MADA;AAEhBR,EAAAA,QAAQ,EAAEZ,SAAS,CAACoB,MAFJ;AAGhBZ,EAAAA,WAAW,EAAER,SAAS,CAACqB,IAHP;AAIhBZ,EAAAA,gBAAgB,EAAET,SAAS,CAACqB;AAJZ,EAKhBC,UALF;;AAOA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCN,EAAAA,IAAI,EAAEM,KAAK,CAACC,KAAN,CAAYP,IADgB;AAElCN,EAAAA,QAAQ,EAAEY,KAAK,CAACC,KAAN,CAAYb;AAFY,CAAZ,CAAxB;;AAKA,MAAMc,kBAAkB,GAAIC,QAAD,KAAe;AACxCnB,EAAAA,WAAW,EAAGoB,KAAD,IAAWD,QAAQ,CAAC1B,OAAO,CAAC2B,KAAD,CAAR,CADQ;AAExCnB,EAAAA,gBAAgB,EAAGmB,KAAD,IAAWD,QAAQ,CAACzB,YAAY,CAAC0B,KAAD,CAAb,CAFG;AAGxCb,EAAAA,gBAAgB,EAAE,MAAMY,QAAQ,CAACxB,YAAY,EAAb;AAHQ,CAAf,CAA3B;;AAMA,eAAeJ,OAAO,CAACwB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CrB,KAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { setTime, saveInterval, updateStatus } from '../actions';\nimport { BsStopwatch } from 'react-icons/bs';\n\nclass Timer extends React.Component {\n  componentDidMount() {\n    const { setTimeProp, saveIntervalProp } = this.props;\n    const intervalTime = 1000;\n    const interval = setInterval(() => setTimeProp(1), intervalTime);\n    saveIntervalProp(interval);\n  }\n\n  resetTimer() {\n    const { interval, saveIntervalProp, updateStatusProp } = this.props;\n    updateStatusProp();\n    clearInterval(interval);\n    saveIntervalProp(null);\n  }\n\n  render() {\n    const { time } = this.props;\n\n    if (time === 0) this.resetTimer();\n\n    return (\n      <div>\n        <BsStopwatch color=\"#000\" size=\"3rem\" />\n        {time === 0 ? <p>Finished</p> : <p>{time}</p>}\n      </div>\n    );\n  }\n}\n\nTimer.propTypes = {\n  time: PropTypes.number,\n  interval: PropTypes.number,\n  setTimeProp: PropTypes.func,\n  saveIntervalProp: PropTypes.func,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  time: state.timer.time,\n  interval: state.timer.interval,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setTimeProp: (value) => dispatch(setTime(value)),\n  saveIntervalProp: (value) => dispatch(saveInterval(value)),\n  updateStatusProp: () => dispatch(updateStatus()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);\n"]},"metadata":{},"sourceType":"module"}