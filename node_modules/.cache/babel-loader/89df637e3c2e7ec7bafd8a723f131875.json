{"ast":null,"code":"var _jsxFileName = \"/home/rafa/Documentos/Programming/My Projects/Front-End/trivia-game/src/pages/Feedback.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from '../components/Button';\n\nclass Feedback extends React.Component {\n  render() {\n    const valuePattern = 3;\n    const {\n      name,\n      score,\n      avatar,\n      assertions,\n      quantityQuestion\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-main-play\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: avatar,\n      alt: \"avatarImage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    }, assertions >= valuePattern ? 'Mandou bem!' : 'Podia ser melhor...'), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    }, 'Score '), score), assertions === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    }, \"Did not get any questions right\") : /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"feedback-total-question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, `${assertions} questions right`), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-btns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      title: \"Play Again\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      title: \"Ranking\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  name: state.player.name,\n  avatar: state.player.gravatarEmail,\n  score: state.player.score,\n  assertions: state.player.assertions,\n  quantityQuestion: state.settings.number\n});\n\nFeedback.propTypes = {\n  name: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n  assertions: PropTypes.number.isRequired,\n  quantityQuestion: PropTypes.number.isRequired\n};\nexport default connect(mapStateToProps)(Feedback);","map":{"version":3,"sources":["/home/rafa/Documentos/Programming/My Projects/Front-End/trivia-game/src/pages/Feedback.js"],"names":["React","connect","Button","Feedback","Component","render","valuePattern","name","score","avatar","assertions","quantityQuestion","props","mapStateToProps","state","player","gravatarEmail","settings","number","propTypes","PropTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,sBAAvB;;AAEA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AACrCC,EAAAA,MAAM,GAAG;AACP,UAAMC,YAAY,GAAG,CAArB;AACA,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,MAAf;AAAuBC,MAAAA,UAAvB;AAAmCC,MAAAA;AAAnC,QAAwD,KAAKC,KAAnE;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAEH,MAAV;AAAkB,MAAA,GAAG,EAAC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,UAAU,IAAIJ,YAAd,GAA6B,aAA7B,GAA6C,qBADhD,CAFF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,QAAP,CADF,EAEGE,KAFH,CALF,EASGE,UAAU,KAAK,CAAf,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADD,gBAGC;AAAG,qBAAY,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,GAAEA,UAAW,kBADjB,CAZJ,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CAhBF,CADF;AAyBD;;AA9BoC;;AAiCvC,MAAMG,eAAe,GAAIC,KAAD,KAAY;AAClCP,EAAAA,IAAI,EAAEO,KAAK,CAACC,MAAN,CAAaR,IADe;AAElCE,EAAAA,MAAM,EAAEK,KAAK,CAACC,MAAN,CAAaC,aAFa;AAGlCR,EAAAA,KAAK,EAAEM,KAAK,CAACC,MAAN,CAAaP,KAHc;AAIlCE,EAAAA,UAAU,EAAEI,KAAK,CAACC,MAAN,CAAaL,UAJS;AAKlCC,EAAAA,gBAAgB,EAAEG,KAAK,CAACG,QAAN,CAAeC;AALC,CAAZ,CAAxB;;AAQAf,QAAQ,CAACgB,SAAT,GAAqB;AACnBZ,EAAAA,IAAI,EAAEa,SAAS,CAACC,MAAV,CAAiBC,UADJ;AAEnBb,EAAAA,MAAM,EAAEW,SAAS,CAACC,MAAV,CAAiBC,UAFN;AAGnBd,EAAAA,KAAK,EAAEY,SAAS,CAACF,MAAV,CAAiBI,UAHL;AAInBZ,EAAAA,UAAU,EAAEU,SAAS,CAACF,MAAV,CAAiBI,UAJV;AAKnBX,EAAAA,gBAAgB,EAAES,SAAS,CAACF,MAAV,CAAiBI;AALhB,CAArB;AAQA,eAAerB,OAAO,CAACY,eAAD,CAAP,CAAyBV,QAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from '../components/Button';\n\nclass Feedback extends React.Component {\n  render() {\n    const valuePattern = 3;\n    const { name, score, avatar, assertions, quantityQuestion } = this.props;\n\n    return (\n      <div className=\"container-main-play\">\n        <img src={avatar} alt=\"avatarImage\"></img>\n        <p>\n          {assertions >= valuePattern ? 'Mandou bem!' : 'Podia ser melhor...'}\n        </p>\n        <p>\n          <span>{'Score '}</span>\n          {score}\n        </p>\n        {assertions === 0 ? (\n          <p>Did not get any questions right</p>\n        ) : (\n          <p data-testid=\"feedback-total-question\">\n            {`${assertions} questions right`}\n          </p>\n        )}\n        <div>\n          <div className=\"container-btns\">\n            <Button title=\"Play Again\"></Button>\n            <Button title=\"Ranking\"></Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  name: state.player.name,\n  avatar: state.player.gravatarEmail,\n  score: state.player.score,\n  assertions: state.player.assertions,\n  quantityQuestion: state.settings.number,\n});\n\nFeedback.propTypes = {\n  name: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n  assertions: PropTypes.number.isRequired,\n  quantityQuestion: PropTypes.number.isRequired,\n};\n\nexport default connect(mapStateToProps)(Feedback);\n"]},"metadata":{},"sourceType":"module"}