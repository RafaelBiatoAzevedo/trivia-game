{"ast":null,"code":"var _jsxFileName = \"/home/rafa/Documentos/Programming/My Projects/Front-End/trivia-game/src/pages/Home.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { asyncToken, loginAction } from '../actions';\nimport { createRanking } from '../services/localStorage';\nimport { getGravatar } from '../serviceAPI';\nimport '../styles/home.css';\nimport trophyIcon from '../images/trophyIcon.png';\nimport gearIcon from '../images/gearIcon.png';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  handleChange(_ref) {\n    let {\n      target\n    } = _ref;\n    const {\n      name,\n      value\n    } = target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleClick() {\n    const {\n      username,\n      email\n    } = this.state;\n    const {\n      loginActionFunc,\n      saveToken,\n      settings\n    } = this.props;\n    saveToken(settings);\n    loginActionFunc(username, email);\n    getGravatar(email).then(response => {\n      const player = {\n        player: {\n          name: username,\n          assertions: 0,\n          score: 0,\n          gravatarEmail: response.url\n        }\n      };\n      localStorage.setItem('state', JSON.stringify(player));\n    });\n    createRanking();\n  }\n\n  renderSettings() {\n    return /*#__PURE__*/React.createElement(Link, {\n      className: \"container-link\",\n      to: \"/settings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"iconsHome\",\n      src: gearIcon,\n      alt: \"gearIcon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn-setup\",\n      type: \"button\",\n      \"data-testid\": \"btn-settings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, \"Settings\"));\n  }\n\n  renderForm() {\n    const {\n      username,\n      email\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"label-input\",\n      htmlFor: \"player-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, \"Player Name\", /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input-name\",\n      id: \"player-name\",\n      name: \"username\",\n      \"data-testid\": \"input-player-name\",\n      onChange: this.handleChange,\n      value: username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"label-input\",\n      htmlFor: \"gravatar-email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, \"Gravatar E-mail\", /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input-email\",\n      id: \"gravatar-email\",\n      name: \"email\",\n      \"data-testid\": \"input-gravatar-email\",\n      onChange: this.handleChange,\n      value: email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Link, {\n      to: \"/play\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn-play\",\n      type: \"submit\",\n      \"data-testid\": \"btn-play\",\n      disabled: !email || !username,\n      onClick: () => this.handleClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, \"Play\")));\n  }\n\n  renderRanking() {\n    return /*#__PURE__*/React.createElement(Link, {\n      className: \"container-link\",\n      to: \"/ranking\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"iconsHome\",\n      src: trophyIcon,\n      alt: \"trophyIcon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn-setup\",\n      type: \"button\",\n      \"data-testid\": \"btn-ranking\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, \"Ranking\"));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }, this.renderForm(), this.renderRanking(), this.renderSettings()));\n  }\n\n}\n\nHome.propTypes = {\n  saveToken: PropTypes.func.isRequired,\n  loginActionFunc: PropTypes.func.isRequired,\n  settings: PropTypes.objectOf().isRequired\n};\n\nconst mapStateToProps = state => ({\n  settings: state.settings\n});\n\nconst mapDispatchToProps = dispatch => ({\n  saveToken: value => dispatch(asyncToken(value)),\n  loginActionFunc: (username, email) => dispatch(loginAction(username, email))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/home/rafa/Documentos/Programming/My Projects/Front-End/trivia-game/src/pages/Home.js"],"names":["React","PropTypes","connect","Link","asyncToken","loginAction","createRanking","getGravatar","trophyIcon","gearIcon","Home","Component","constructor","props","state","username","email","handleChange","bind","componentDidMount","window","scrollTo","target","name","value","setState","handleClick","loginActionFunc","saveToken","settings","then","response","player","assertions","score","gravatarEmail","url","localStorage","setItem","JSON","stringify","renderSettings","renderForm","renderRanking","render","propTypes","func","isRequired","objectOf","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { asyncToken, loginAction } from '../actions';\nimport { createRanking } from '../services/localStorage';\nimport { getGravatar } from '../serviceAPI';\nimport '../styles/home.css';\nimport trophyIcon from '../images/trophyIcon.png';\nimport gearIcon from '../images/gearIcon.png';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleClick() {\n    const { username, email } = this.state;\n    const { loginActionFunc, saveToken, settings } = this.props;\n    saveToken(settings);\n    loginActionFunc(username, email);\n    getGravatar(email).then((response) => {\n      const player = {\n        player: {\n          name: username,\n          assertions: 0,\n          score: 0,\n          gravatarEmail: response.url,\n        },\n      };\n      localStorage.setItem('state', JSON.stringify(player));\n    });\n    createRanking();\n  }\n\n  renderSettings() {\n    return (\n      <Link className=\"container-link\" to=\"/settings\">\n        <img className=\"iconsHome\" src={ gearIcon } alt=\"gearIcon\" />\n        <button\n          className=\"btn-setup\"\n          type=\"button\"\n          data-testid=\"btn-settings\"\n        >\n          Settings\n        </button>\n      </Link>\n    );\n  }\n\n  renderForm() {\n    const { username, email } = this.state;\n    return (\n      <form>\n        <label className=\"label-input\" htmlFor=\"player-name\">\n          Player Name\n          <input\n            className=\"input-name\"\n            id=\"player-name\"\n            name=\"username\"\n            data-testid=\"input-player-name\"\n            onChange={ this.handleChange }\n            value={ username }\n          />\n        </label>\n        <label className=\"label-input\" htmlFor=\"gravatar-email\">\n          Gravatar E-mail\n          <input\n            className=\"input-email\"\n            id=\"gravatar-email\"\n            name=\"email\"\n            data-testid=\"input-gravatar-email\"\n            onChange={ this.handleChange }\n            value={ email }\n          />\n        </label>\n        <Link to=\"/play\">\n          <button\n            className=\"btn-play\"\n            type=\"submit\"\n            data-testid=\"btn-play\"\n            disabled={ (!email || !username) }\n            onClick={ () => this.handleClick() }\n          >\n            Play\n          </button>\n        </Link>\n      </form>\n    );\n  }\n\n  renderRanking() {\n    return (\n      <Link className=\"container-link\" to=\"/ranking\">\n        <img className=\"iconsHome\" src={ trophyIcon } alt=\"trophyIcon\" />\n        <button\n          className=\"btn-setup\"\n          type=\"button\"\n          data-testid=\"btn-ranking\"\n        >\n          Ranking\n        </button>\n      </Link>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container-main\">\n        <div className=\"container-top\">\n          { this.renderForm() }\n          { this.renderRanking() }\n          { this.renderSettings() }\n        </div>\n      </div>\n    );\n  }\n}\n\nHome.propTypes = {\n  saveToken: PropTypes.func.isRequired,\n  loginActionFunc: PropTypes.func.isRequired,\n  settings: PropTypes.objectOf().isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  settings: state.settings,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveToken: (value) => dispatch(asyncToken(value)),\n  loginActionFunc: (username, email) => dispatch(loginAction(username, email)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n"]},"metadata":{},"sourceType":"module"}