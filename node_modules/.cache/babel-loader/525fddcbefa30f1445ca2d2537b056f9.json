{"ast":null,"code":"var _jsxFileName = \"/home/rafa/Documentos/Programming/My Projects/Front-End/trivia-game/src/pages/Ranking.js\";\nimport React from 'react';\nimport '../styles/ranking.css';\nimport { Button } from '../components/Button';\nimport { FaArrowLeft } from 'react-icons/fa';\n\nclass Ranking extends React.Component {\n  constructor(props) {\n    super(props);\n    this.invertRanking = this.invertRanking.bind(this);\n    this.setRankingState = this.setRankingState.bind(this);\n    this.resetRanking = this.resetRanking.bind(this);\n    this.state = {\n      ranking: []\n    };\n  }\n\n  componentDidMount() {\n    this.setRankingState();\n  }\n\n  setRankingState() {\n    const ranking = JSON.parse(localStorage.getItem('ranking'));\n    if (ranking) this.setState({\n      ranking\n    });\n  }\n\n  resetRanking() {\n    localStorage.setItem('ranking', JSON.stringify([]));\n    this.setRankingState();\n  }\n\n  invertRanking() {\n    const {\n      ranking\n    } = this.state;\n\n    if (ranking.length >= 2) {\n      if (ranking[0].score > ranking[1].score) ranking.sort((a, b) => a.score - b.score);else ranking.sort((a, b) => b.score - a.score);\n      this.setState({\n        ranking\n      });\n    }\n  }\n\n  renderBtns() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-btns-ranking\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      icon: /*#__PURE__*/React.createElement(FaArrowLeft, {\n        color: \"white\",\n        size: \"1.6rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      }),\n      title: \"Home\",\n      textSize: \"1.4rem\",\n      textColor: \"white\",\n      textWeight: \"600\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      title: \"Clear\",\n      onClick: this.resetRanking,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      title: \"Invert \",\n      onClick: this.invertRanking,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  render() {\n    const {\n      ranking\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-main-play\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        color: 'white',\n        fontSize: '3rem',\n        padding: '2rem 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, \"Ranking\"), this.renderBtns(), ranking.map((player, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-ranking\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"span-number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, `${index + 1}#`), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"img-gravatar\",\n      src: player.gravatarEmail,\n      alt: \"player\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": `player-name-${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, player.name), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": `player-score-${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, player.score)))));\n  }\n\n}\n\nexport default Ranking;","map":{"version":3,"sources":["/home/rafa/Documentos/Programming/My Projects/Front-End/trivia-game/src/pages/Ranking.js"],"names":["React","Button","FaArrowLeft","Ranking","Component","constructor","props","invertRanking","bind","setRankingState","resetRanking","state","ranking","componentDidMount","JSON","parse","localStorage","getItem","setState","setItem","stringify","length","score","sort","a","b","renderBtns","render","color","fontSize","padding","map","player","index","gravatarEmail","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../styles/ranking.css';\n\nimport { Button } from '../components/Button';\nimport { FaArrowLeft } from 'react-icons/fa';\n\nclass Ranking extends React.Component {\n  constructor(props) {\n    super(props);\n    this.invertRanking = this.invertRanking.bind(this);\n    this.setRankingState = this.setRankingState.bind(this);\n    this.resetRanking = this.resetRanking.bind(this);\n    this.state = {\n      ranking: [],\n    };\n  }\n\n  componentDidMount() {\n    this.setRankingState();\n  }\n\n  setRankingState() {\n    const ranking = JSON.parse(localStorage.getItem('ranking'));\n    if (ranking) this.setState({ ranking });\n  }\n\n  resetRanking() {\n    localStorage.setItem('ranking', JSON.stringify([]));\n    this.setRankingState();\n  }\n\n  invertRanking() {\n    const { ranking } = this.state;\n    if (ranking.length >= 2) {\n      if (ranking[0].score > ranking[1].score)\n        ranking.sort((a, b) => a.score - b.score);\n      else ranking.sort((a, b) => b.score - a.score);\n      this.setState({ ranking });\n    }\n  }\n\n  renderBtns() {\n    return (\n      <div className=\"container-btns-ranking\">\n        <Button\n          icon={<FaArrowLeft color=\"white\" size=\"1.6rem\" />}\n          title=\"Home\"\n          textSize=\"1.4rem\"\n          textColor=\"white\"\n          textWeight=\"600\"\n        />\n        <Button title=\"Clear\" onClick={this.resetRanking} />\n        <Button title=\"Invert \" onClick={this.invertRanking} />\n      </div>\n    );\n  }\n\n  render() {\n    const { ranking } = this.state;\n\n    return (\n      <div className=\"container-main-play\">\n        <h1 style={{ color: 'white', fontSize: '3rem', padding: '2rem 0' }}>\n          Ranking\n        </h1>\n        {this.renderBtns()}\n        {ranking.map((player, index) => (\n          <div className=\"container-ranking\" key={index}>\n            <span className=\"span-number\">{`${index + 1}#`}</span>\n            <img\n              className=\"img-gravatar\"\n              src={player.gravatarEmail}\n              alt=\"player\"\n            />\n            <div className=\"container-info\">\n              <p data-testid={`player-name-${index}`}>{player.name}</p>\n              <p data-testid={`player-score-${index}`}>{player.score}</p>\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Ranking;\n"]},"metadata":{},"sourceType":"module"}