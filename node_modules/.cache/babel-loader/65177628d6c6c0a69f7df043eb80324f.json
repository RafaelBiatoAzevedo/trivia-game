{"ast":null,"code":"var _jsxFileName = \"/home/rafa/Documentos/Programming/My Projects/Front-End/trivia-game/src/components/Game.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { saveScore, saveInterval, setTime, restartTime, updateStatus } from '../actions';\nimport { addPlayerInRanking } from '../services/localStorage';\nimport Timer from './Timer';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      answerIndex: 0,\n      answerSelected: false\n    };\n    this.nextQuestion = this.nextQuestion.bind(this);\n    this.styleAnswer = this.styleAnswer.bind(this);\n    this.answerSelected = this.answerSelected.bind(this);\n  }\n\n  setRanking() {\n    const {\n      player\n    } = JSON.parse(localStorage.getItem('state'));\n    addPlayerInRanking(player.gravatarEmail, player);\n  }\n\n  setReduxAndLocalStorage(answer) {\n    const {\n      asks,\n      time\n    } = this.props;\n    const ask = asks.find(askItem => answer === askItem.correct_answer);\n    const {\n      difficulty\n    } = ask;\n    const valuePattern = 10;\n    const valueHard = 3;\n    let valueDifficulty = 0;\n    if (difficulty === 'hard') valueDifficulty = valueHard;else if (difficulty === 'medium') valueDifficulty = 2;else valueDifficulty = 1;\n    const score = valuePattern + time * valueDifficulty;\n    const dataStorage = { ...JSON.parse(localStorage.getItem('state'))\n    };\n    dataStorage.player.score += score;\n    this.updateScore(dataStorage);\n  }\n\n  updateScore(dataStorage) {\n    const {\n      savScore\n    } = this.props;\n    dataStorage.player.assertions += 1;\n    savScore(dataStorage.player.score);\n    localStorage.setItem('state', JSON.stringify({ ...dataStorage\n    }));\n  }\n\n  styleAnswer(answer, correctAnswer) {\n    const {\n      answerSelected\n    } = this.state;\n\n    if (answerSelected) {\n      if (answer === correctAnswer) {\n        return {\n          border: '3px solid rgb(6, 240, 15)'\n        };\n      }\n\n      if (answer !== correctAnswer) {\n        return {\n          border: '3px solid rgb(255, 0, 0)'\n        };\n      }\n    }\n\n    return {\n      border: null\n    };\n  }\n\n  answerSelected(evt) {\n    const {\n      interval\n    } = this.props;\n    const {\n      value\n    } = evt.target;\n    this.setState({\n      answerSelected: true\n    });\n    clearInterval(interval);\n    if (value) this.setReduxAndLocalStorage(value);\n  }\n\n  nextQuestion() {\n    const {\n      setTimeProp,\n      saveIntervalProp,\n      restartTimeProp\n    } = this.props;\n    const {\n      answerIndex\n    } = this.state;\n    this.setState({\n      answerIndex: answerIndex + 1,\n      answerSelected: false\n    });\n    restartTimeProp();\n    const intervalTime = 1000;\n    const interval = setInterval(() => setTimeProp(1), intervalTime);\n    saveIntervalProp(interval);\n  }\n\n  elementButtonNext() {\n    const {\n      asks\n    } = this.props;\n    const {\n      answerIndex\n    } = this.state;\n    const MAX = asks.length - 1;\n\n    if (answerIndex === MAX) {\n      return /*#__PURE__*/React.createElement(Link, {\n        className: \"link-feedback\",\n        to: \"/feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn-finish\",\n        onClick: this.setRanking,\n        type: \"button\",\n        \"data-testid\": \"btn-next\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }, \"Finish\"));\n    }\n\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn-next\",\n      type: \"button\",\n      \"data-testid\": \"btn-next\",\n      onClick: this.nextQuestion,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, \"Next\");\n  }\n\n  elementAnswer(answer, testid, index, correctAnswer) {\n    const {\n      answerSelected\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn-answer\",\n      value: correctAnswer === answer ? answer : '',\n      disabled: answerSelected,\n      key: index,\n      type: \"button\",\n      \"data-testid\": testid,\n      style: this.styleAnswer(answer, correctAnswer),\n      onClick: this.answerSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }\n    }, answer);\n  }\n\n  renderAnswers(answers) {\n    const {\n      answerIndex\n    } = this.state;\n    const {\n      asks\n    } = this.props;\n    return answers.map((answerElement, indexElement) => {\n      const {\n        answer,\n        index\n      } = answerElement;\n\n      if (answer === asks[answerIndex].correct_answer) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"btn-answer\",\n          key: indexElement,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 11\n          }\n        }, this.elementAnswer(answer, 'correct-answer', indexElement, asks[answerIndex].correct_answer));\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"btn-answer\",\n        key: indexElement,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }\n      }, this.elementAnswer(answer, `wrong-answer-${index}`, indexElement, asks[answerIndex].correct_answer));\n    });\n  }\n\n  render() {\n    const {\n      answerIndex,\n      answerSelected\n    } = this.state;\n    const {\n      asks,\n      statusTimer,\n      updateStatusProp\n    } = this.props;\n    const MAX_QUESTIONS = asks.length - 1;\n\n    if (statusTimer) {\n      this.setState({\n        answerSelected: true\n      });\n      updateStatusProp();\n    }\n\n    if (asks.length > 0) {\n      const {\n        category,\n        question\n      } = asks[answerIndex];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-ask\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"text-category\",\n        \"data-testid\": \"question-category\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }\n      }, category), /*#__PURE__*/React.createElement(\"p\", {\n        \"data-testid\": \"question-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }\n      }, question), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-answers\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }\n      }, this.renderAnswers(asks[answerIndex].results)), answerSelected && answerIndex <= MAX_QUESTIONS && this.elementButtonNext(), /*#__PURE__*/React.createElement(Timer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"p\", {\n      className: \"msg-loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 12\n      }\n    }, \"Loading... Prepare!\");\n  }\n\n}\n\nGame.propTypes = {\n  asks: PropTypes.arrayOf(PropTypes.object),\n  savScore: PropTypes.func,\n  setTimeProp: PropTypes.func,\n  saveIntervalProp: PropTypes.func,\n  restartTimeProp: PropTypes.func,\n  interval: PropTypes.number,\n  time: PropTypes.number\n}.isRequired;\n\nconst mapStateToProps = state => ({\n  asks: state.askAndAnswersReducer,\n  interval: state.timer.interval,\n  time: state.timer.time,\n  statusTimer: state.timer.statusFinishTimer\n});\n\nconst mapDispatchToProps = dispatch => ({\n  savScore: score => dispatch(saveScore(score)),\n  setTimeProp: value => dispatch(setTime(value)),\n  saveIntervalProp: value => dispatch(saveInterval(value)),\n  restartTimeProp: () => dispatch(restartTime()),\n  updateStatusProp: () => dispatch(updateStatus())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);","map":{"version":3,"sources":["/home/rafa/Documentos/Programming/My Projects/Front-End/trivia-game/src/components/Game.js"],"names":["React","PropTypes","connect","Link","saveScore","saveInterval","setTime","restartTime","updateStatus","addPlayerInRanking","Timer","Game","Component","constructor","props","state","answerIndex","answerSelected","nextQuestion","bind","styleAnswer","setRanking","player","JSON","parse","localStorage","getItem","gravatarEmail","setReduxAndLocalStorage","answer","asks","time","ask","find","askItem","correct_answer","difficulty","valuePattern","valueHard","valueDifficulty","score","dataStorage","updateScore","savScore","assertions","setItem","stringify","correctAnswer","border","evt","interval","value","target","setState","clearInterval","setTimeProp","saveIntervalProp","restartTimeProp","intervalTime","setInterval","elementButtonNext","MAX","length","elementAnswer","testid","index","renderAnswers","answers","map","answerElement","indexElement","render","statusTimer","updateStatusProp","MAX_QUESTIONS","category","question","results","propTypes","arrayOf","object","func","number","isRequired","mapStateToProps","askAndAnswersReducer","timer","statusFinishTimer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { saveScore, saveInterval, setTime, restartTime, updateStatus } from '../actions';\nimport { addPlayerInRanking } from '../services/localStorage';\nimport Timer from './Timer';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      answerIndex: 0,\n      answerSelected: false,\n    };\n    this.nextQuestion = this.nextQuestion.bind(this);\n    this.styleAnswer = this.styleAnswer.bind(this);\n    this.answerSelected = this.answerSelected.bind(this);\n  }\n\n  setRanking() {\n    const { player } = JSON.parse(localStorage.getItem('state'));\n    addPlayerInRanking(player.gravatarEmail, player);\n  }\n\n  setReduxAndLocalStorage(answer) {\n    const { asks, time } = this.props;\n    const ask = asks.find((askItem) => answer === askItem.correct_answer);\n    const { difficulty } = ask;\n    const valuePattern = 10;\n    const valueHard = 3;\n    let valueDifficulty = 0;\n\n    if (difficulty === 'hard') valueDifficulty = valueHard;\n    else if (difficulty === 'medium') valueDifficulty = 2;\n    else valueDifficulty = 1;\n    const score = valuePattern + (time * valueDifficulty);\n    const dataStorage = { ...JSON.parse(localStorage.getItem('state')) };\n    dataStorage.player.score += score;\n    this.updateScore(dataStorage);\n  }\n\n  updateScore(dataStorage) {\n    const { savScore } = this.props;\n    dataStorage.player.assertions += 1;\n    savScore(dataStorage.player.score);\n    localStorage.setItem('state', JSON.stringify({ ...dataStorage }));\n  }\n\n  styleAnswer(answer, correctAnswer) {\n    const { answerSelected } = this.state;\n    if (answerSelected) {\n      if (answer === correctAnswer) {\n        return { border: '3px solid rgb(6, 240, 15)' };\n      }\n      if (answer !== correctAnswer) {\n        return { border: '3px solid rgb(255, 0, 0)' };\n      }\n    }\n    return { border: null };\n  }\n\n  answerSelected(evt) {\n    const { interval } = this.props;\n    const { value } = evt.target;\n    this.setState({ answerSelected: true });\n    clearInterval(interval);\n    if (value) this.setReduxAndLocalStorage(value);\n  }\n\n  nextQuestion() {\n    const { setTimeProp, saveIntervalProp, restartTimeProp } = this.props;\n    const { answerIndex } = this.state;\n    this.setState({ answerIndex: answerIndex + 1, answerSelected: false });\n    restartTimeProp();\n    const intervalTime = 1000;\n    const interval = setInterval(() => setTimeProp(1), intervalTime);\n    saveIntervalProp(interval);\n  }\n\n  elementButtonNext() {\n    const { asks } = this.props;\n    const { answerIndex } = this.state;\n    const MAX = asks.length - 1;\n    if (answerIndex === MAX) {\n      return (\n        <Link className=\"link-feedback\" to=\"/feedback\">\n          <button\n            className=\"btn-finish\"\n            onClick={ this.setRanking }\n            type=\"button\"\n            data-testid=\"btn-next\"\n          >\n            Finish\n          </button>\n        </Link>\n      );\n    }\n    return (\n      <button\n        className=\"btn-next\"\n        type=\"button\"\n        data-testid=\"btn-next\"\n        onClick={ this.nextQuestion }\n      >\n        Next\n      </button>\n    );\n  }\n\n  elementAnswer(answer, testid, index, correctAnswer) {\n    const { answerSelected } = this.state;\n    return (\n      <button\n        className=\"btn-answer\"\n        value={ (correctAnswer === answer) ? answer : '' }\n        disabled={ (answerSelected) }\n        key={ index }\n        type=\"button\"\n        data-testid={ testid }\n        style={ this.styleAnswer(answer, correctAnswer) }\n        onClick={ this.answerSelected }\n      >\n        { answer }\n      </button>\n    );\n  }\n\n  renderAnswers(answers) {\n    const { answerIndex } = this.state;\n    const { asks } = this.props;\n    return answers.map((answerElement, indexElement) => {\n      const { answer, index } = answerElement;\n      if (answer === asks[answerIndex].correct_answer) {\n        return (\n          <div className=\"btn-answer\" key={ indexElement }>\n            {\n              this.elementAnswer(\n                answer, 'correct-answer',\n                indexElement,\n                asks[answerIndex].correct_answer,\n              )\n            }\n          </div>\n        );\n      }\n      return (\n        <div className=\"btn-answer\" key={ indexElement }>\n          {\n            this.elementAnswer(\n              answer, `wrong-answer-${index}`,\n              indexElement,\n              asks[answerIndex].correct_answer,\n            )\n          }\n        </div>\n      );\n    });\n  }\n\n  render() {\n    const { answerIndex, answerSelected } = this.state;\n    const { asks, statusTimer, updateStatusProp } = this.props;\n    const MAX_QUESTIONS = asks.length - 1;\n    if (statusTimer) {\n      this.setState({ answerSelected: true });\n      updateStatusProp();\n    }\n    if (asks.length > 0) {\n      const { category, question } = asks[answerIndex];\n      return (\n        <div className=\"container-ask\">\n          <h3 className=\"text-category\" data-testid=\"question-category\">{ category }</h3>\n          <p data-testid=\"question-text\">{ question }</p>\n          <div className=\"container-answers\">\n            { this.renderAnswers(asks[answerIndex].results) }\n          </div>\n          {(answerSelected && answerIndex <= MAX_QUESTIONS)\n          && this.elementButtonNext()}\n          <Timer />\n        </div>\n      );\n    }\n    return <p className=\"msg-loading\">Loading... Prepare!</p>;\n  }\n}\n\nGame.propTypes = {\n  asks: PropTypes.arrayOf(PropTypes.object),\n  savScore: PropTypes.func,\n  setTimeProp: PropTypes.func,\n  saveIntervalProp: PropTypes.func,\n  restartTimeProp: PropTypes.func,\n  interval: PropTypes.number,\n  time: PropTypes.number,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  asks: state.askAndAnswersReducer,\n  interval: state.timer.interval,\n  time: state.timer.time,\n  statusTimer: state.timer.statusFinishTimer,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  savScore: (score) => dispatch(saveScore(score)),\n  setTimeProp: (value) => dispatch(setTime(value)),\n  saveIntervalProp: (value) => dispatch(saveInterval(value)),\n  restartTimeProp: () => dispatch(restartTime()),\n  updateStatusProp: () => dispatch(updateStatus()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n"]},"metadata":{},"sourceType":"module"}