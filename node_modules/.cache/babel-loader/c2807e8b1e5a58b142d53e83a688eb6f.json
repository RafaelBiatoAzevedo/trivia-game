{"ast":null,"code":"import { SET_TIME, SAVE_INTERVAL, RESTART_TIME, UPDATE_STATUS } from '../actions';\nconst INITIAL_TIMER = {\n  time: 30,\n  interval: null,\n  statusFinishTimer: false\n};\n\nconst timer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_TIMER;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case UPDATE_STATUS:\n      return { ...state,\n        statusFinishTimer: !state.statusFinishTimer\n      };\n\n    case RESTART_TIME:\n      return { ...state,\n        time: 30\n      };\n\n    case SET_TIME:\n      return { ...state,\n        time: state.time - action.value\n      };\n\n    case SAVE_INTERVAL:\n      return { ...state,\n        interval: action.value\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default timer;","map":{"version":3,"sources":["/home/rafa/Documentos/Programming/My Projects/Front-End/trivia-game/src/reducers/timer.js"],"names":["SET_TIME","SAVE_INTERVAL","RESTART_TIME","UPDATE_STATUS","INITIAL_TIMER","time","interval","statusFinishTimer","timer","state","action","type","value"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,aAAnB,EAAkCC,YAAlC,EAAgDC,aAAhD,QAAqE,YAArE;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAE,EADc;AAEpBC,EAAAA,QAAQ,EAAE,IAFU;AAGpBC,EAAAA,iBAAiB,EAAE;AAHC,CAAtB;;AAMA,MAAMC,KAAK,GAAG,YAAmC;AAAA,MAAlCC,KAAkC,uEAA1BL,aAA0B;AAAA,MAAXM,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKR,aAAL;AACE,aAAO,EAAE,GAAGM,KAAL;AAAYF,QAAAA,iBAAiB,EAAE,CAACE,KAAK,CAACF;AAAtC,OAAP;;AACF,SAAKL,YAAL;AACE,aAAO,EAAE,GAAGO,KAAL;AAAYJ,QAAAA,IAAI,EAAE;AAAlB,OAAP;;AACF,SAAKL,QAAL;AACE,aAAO,EAAE,GAAGS,KAAL;AAAYJ,QAAAA,IAAI,EAAEI,KAAK,CAACJ,IAAN,GAAaK,MAAM,CAACE;AAAtC,OAAP;;AACF,SAAKX,aAAL;AACE,aAAO,EAAE,GAAGQ,KAAL;AAAYH,QAAAA,QAAQ,EAAEI,MAAM,CAACE;AAA7B,OAAP;;AACF;AACE,aAAOH,KAAP;AAVF;AAYD,CAbD;;AAeA,eAAeD,KAAf","sourcesContent":["import { SET_TIME, SAVE_INTERVAL, RESTART_TIME, UPDATE_STATUS } from '../actions';\n\nconst INITIAL_TIMER = {\n  time: 30,\n  interval: null,\n  statusFinishTimer: false,\n};\n\nconst timer = (state = INITIAL_TIMER, action) => {\n  switch (action.type) {\n  case UPDATE_STATUS:\n    return { ...state, statusFinishTimer: !state.statusFinishTimer };\n  case RESTART_TIME:\n    return { ...state, time: 30 };\n  case SET_TIME:\n    return { ...state, time: state.time - action.value };\n  case SAVE_INTERVAL:\n    return { ...state, interval: action.value };\n  default:\n    return state;\n  }\n};\n\nexport default timer;\n"]},"metadata":{},"sourceType":"module"}